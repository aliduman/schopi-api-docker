cat > docker-compose.yml << 'EOF'
services:
  php:
    build:
      context: .
      dockerfile: Dockerfile.php
    container_name: php-dev
    volumes:
      - ./src:/var/www/html
      - ./php/php.ini:/usr/local/etc/php/php.ini
    networks:
      - dev-network
    depends_on:
      - mysql
      - memcache

  nginx:
    image: nginx:alpine
    container_name: nginx-dev
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - dev-network
    depends_on:
      - php

  mysql:
    image: mysql:8.0
    container_name: mysql-dev
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: development
      MYSQL_USER: devuser
      MYSQL_PASSWORD: devpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - dev-network

  memcache:
    image: memcached:alpine
    container_name: memcache-dev
    ports:
      - "11211:11211"
    networks:
      - dev-network
    command: memcached -m 128

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin-dev
    environment:
      PMA_HOST: mysql
      PMA_USER: devuser
      PMA_PASSWORD: devpassword
    ports:
      - "8081:80"
    networks:
      - dev-network
    depends_on:
      - mysql

volumes:
  mysql_data:

networks:
  dev-network:
    driver: bridge
